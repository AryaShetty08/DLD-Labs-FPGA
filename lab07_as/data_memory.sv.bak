module data_memory(
    input logic clk, rst
    input logic[31:0] A, //address
    input logic[31:0] WD, //input data
    input logic WE, //enable input
    output logic[31:0] RD,
    output logic[31:0] prode //to check the data in data memory
); //output data

logic[31:0] dm_regs[0:255];
integer i;

assign RD = dm_regs[A[7:0]]; //read from address
assign prode = dm_regs[1]; //read from first register

always_ff @(posedge clk or posedge rst) begin
    if (rst) begin
        for (i = 0; i < 256; i = i + 1) begin
            dm_regs[i] <= 32'd0; // initialized to 0
        end
    end
    else begin
        if (WE) begin 
            dm_regs[A[7:0]] <= WD;
        end
    end
end

endmodule